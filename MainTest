import java.util.Scanner;

public class MainTest {

	public static void main(String args[]) {

		Scanner input = new Scanner(System.in);

		SantoriniGame game = new SantoriniGame();

		int start = 0;

		while (start == 0) {
			start++;

			System.out.println("############ Santorini ############");

			System.out.println();

			System.out.println("Enter name of player1: ");
			String player1 = input.next();
			System.out.println("Enter name of player2: ");
			String player2 = input.next();

			System.out.println();

			String worker;
			int posX;
			int posY;
			Worker[] workers = game.getWorkers();

			System.out.println("Placing workers");
			for (int i = 0; i < workers.length; i++) {
				System.out.println("Initial position: (Worker, X, Y)");
				worker = input.next();
				posX = input.nextInt();
				posY = input.nextInt();
				workers[i] = new Worker(worker);
				workers[i].placeWorker(posX, posY);
			}

			System.out.println(game);

			System.out.println();

			boolean win = false;
			boolean turn = true; // True for first player, false for second player.

			while (!win) {
				if (turn)
					System.out.println("The turn is for player: " + player1);
				else
					System.out.println("The turn is for player: " + player2);

				if (turn) {
					if (game.isTrapped(0) && game.isTrapped(1)) {
						System.out.println(); // Just for aesthetics
						System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
						System.out.println();
						System.out.println(player1 + " is stuck!");
						System.out.println("****Congratulations " + player2 + ", you have won!****");
						win = true;
					}
				} else if (!turn) {
					if (game.isTrapped(2) && game.isTrapped(3)) {
						System.out.println();
						System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
						System.out.println();
						System.out.println(player2 + " is stuck!");
						System.out.println("****Congratulations " + player1 + ", you have won!****");
						win = true;
					}
				}

				System.out.println();
				System.out.println("Enter move: (Worker, X, Y)");
				worker = input.next();
				posX = input.nextInt();
				posY = input.nextInt();

				int workerNum = 0;
				for (int i = 0; i < workers.length; i++) {
					if (workers[i].getName().toLowerCase().equals(worker)) {
						workerNum = i;
						break;
					}
				}

				boolean build = true;

				if (!workers[workerNum].move(posX, posY, game)) {
					System.out.println("Move insuccesful, please try again");
					build = false;
					turn = !turn;
				}

				workers[workerNum].move(posX, posY, game);

				System.out.println(game);

				if (build) {
					boolean repeat = true;

					do {
						System.out.println();
						System.out.println("Enter building action: (buildX, buildY)");
						int buildX = input.nextInt();
						int checkX = Math.abs(buildX - posX);
						int buildY = input.nextInt();
						int checkY = Math.abs(buildY - posY);

						if ((checkX > 1 || checkY > 1))
							System.out.println("Build action failed, please try again");
						else if (game.build(buildX, buildY))
							repeat = false;
						else
							System.out.println("Build action failed, please try again");

					} while (repeat);

					System.out.println(game);
				}

				if (game.hasWon()) {
					win = true;
					if (turn) {
						System.out.println();
						System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
						System.out.println();
						System.out.println("****Congratulations " + player1 + ", you have won!****");
					} else {
						System.out.println();
						System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
						System.out.println();
						System.out.println("****Congratulations " + player2 + ", you have won!****");
					}
				}
				
				System.out.println("Reset? (y/n)");
				String ans = input.next();
				if (ans.contains("y")) {
					game.reset();
					win = true;
					start = 0;
				}
				
				turn = !turn;
			}
		}
		input.close();
	}
}

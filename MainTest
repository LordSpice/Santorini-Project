import java.util.Scanner;

/*
import java.io.DataInputStream;
import java.io.FileNotFoundException;
*/

public class MainTest {

	public static void main(String args[]) {

		Scanner input = new Scanner(System.in);

		SantoriniGame game = new SantoriniGame();

		/*
		 * int a = Integer.parseInt("1");
		 */

		String player1 = "";
		String player2 = "";

		boolean loop = true;
		boolean turn = true; // True for first player, false for second player.
		int start = 0;

		while (loop) {
			String worker;
			int posX;
			int posY;
			Worker[] workers = game.getWorkers();

			if (start == 0) {
				/* Unnecessary for this test
				 * System.out.println("Enter the name of player1: "); player1 = input.next();
				 * System.out.println("Enter the name of player2: "); player2 = input.next();
				 */
				
				for (int i = 0; i < workers.length; i++) {
					System.out.println("Initial position: (Worker, X, Y)");
					worker = input.next();
					posX = input.nextInt();
					posY = input.nextInt();
					workers[i] = new Worker(worker);
					workers[i].placeWorker(posX, posY);
				}

				start++;
				System.out.println(game);
			} else {
				System.out.println("Enter move: (Worker, X, Y)");
				worker = input.next();
				posX = input.nextInt();
				posY = input.nextInt();

				int workerNum = 0;
				for (int i = 0; i < workers.length; i++) {
					if (workers[i].getName().toLowerCase().equals(worker)) {
						workerNum = i;
						break;
					}
				}

				boolean build = true;

				if (!workers[workerNum].move(posX, posY, game)) {
					System.out.println("Move insuccesful, please try again");
					build = false;
				}

				workers[workerNum].move(posX, posY, game);

				System.out.println(game);

				if (!game.hasWon()) {
					if (build) {

						int buildX = 0;
						int buildY = 0;

						boolean repeat = true;

						do {
							System.out.println("Enter building action: (buildX, buildY)");
							buildX = input.nextInt();
							int checkX = Math.abs(buildX - posX);
							buildY = input.nextInt();
							int checkY = Math.abs(buildX - posY);
							
							if (!game.build(buildX, buildY) || (checkX > 1 && checkY > 1))
								System.out.println("Build action failed, please try again");
							else if (checkX <= 1 && checkY <= 1) {
								game.build(buildX, buildY);
								repeat = false;
							}

						} while (!game.build(buildX, buildY));

						System.out.println(game);
					}
				} else
					return;

				System.out.println("Reset? (y/n)");
				String ans = input.next();
				if (ans.contains("y")) {
					game.reset();
					start = 0;
				}
			}
		}
		/*
		 * for (int i = 0; i < game1.getWorkers().length; i++) {
		 * System.out.println(game1.accessWorker(i)); }
		 */
	}
}

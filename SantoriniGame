
public class SantoriniGame {

	private int[][] board = new int[5][5]; // Changed to int for easier future coding
	private Worker[] workers = { new Worker("w11"), new Worker("w12"), new Worker("w21"), new Worker("w22") };

	public SantoriniGame() {
		board = new int[5][5];
		workers = new Worker[4];

		workers[0] = new Worker("w11");
		workers[1] = new Worker("w12");
		workers[2] = new Worker("w21");
		workers[3] = new Worker("w22");
	}

	public int[][] getBoard() {
		return board;
	}

	public Worker[] getWorkers() {
		return workers;
	}

	public String toString() {
		String rep = ""; // rep == representation

		for (int row = 0; row < 5; row++) { // Edit
			for (int col = 0; col < 5; col++) { // Edit
				String block = "";

				if (board[row][col] < 4)
					for (int i = 0; i < board[row][col]; i++) {
						block += "B";
					}
				else if (board[row][col] == 4)
					block = "BBBD";

				for (int i = 0; i < workers.length; i++) {
					if (workers[i].getPositionX() == row && workers[i].getPositionY() == col) {
						block += workers[i].getName();
					}
				}

				rep += block + "   ";
			}

			rep += "\n";
		}

		return rep;
	}

	public boolean build(int positionX, int positionY) { // Should the method build as well?

		for (int i = 0; i < workers.length; i++) { // To check if a worker occupies the space
			if (workers[i].getPositionX() == positionX && workers[i].getPositionY() == positionY)
				return false;
		}
		
		if (board[positionX][positionY] < 4) { // To check if the tile is no more than three level
			board[positionX][positionY]++;
			return true;
		} else
			return false;
	}

	/*
	 * public Worker accessWorker(int i) { return workers[i]; } Used for testing
	 * worker names
	 */
}
